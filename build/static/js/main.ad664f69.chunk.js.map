{"version":3,"sources":["components/Filter.jsx","components/PersonForm.jsx","components/Persons.jsx","components/Notification.jsx","services.js","App.js","index.js"],"names":["Filter","filterQuery","handleFilterChange","value","onChange","PersonForm","handleFormSubmit","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","Persons","person","query","onDelete","filteredPhoneBook","filter","name","toLowerCase","includes","map","id","number","onClick","Notification","message","status","className","baseURL","getAll","axios","get","then","response","data","App","useState","persons","setPersons","useEffect","setFilterQuery","setNewName","setNewNumber","setMessage","length","e","target","preventDefault","newPerson","availability","find","changedPerson","undefined","post","create","window","confirm","put","catch","error","console","log","update","res","parentElement","delete","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.ad664f69.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Filter = ({ filterQuery, handleFilterChange }) => {\r\n  return (\r\n    <div>\r\n      filter shown with:{\" \"}\r\n      <input value={filterQuery} onChange={handleFilterChange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\n\r\nconst PersonForm = ({\r\n  handleFormSubmit,\r\n  newName,\r\n  handleNameChange,\r\n  newNumber,\r\n  handleNumberChange\r\n}) => {\r\n  return (\r\n    <form onSubmit={handleFormSubmit}>\r\n      <div>\r\n        name: <input value={newName} onChange={handleNameChange} />\r\n      </div>\r\n      <div>\r\n        number: <input value={newNumber} onChange={handleNumberChange} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PersonForm;\r\n","import React from 'react';\r\n\r\nconst Persons = ({ person, query, onDelete }) => {\r\n  const phoneBook = [...person];\r\n\r\n  const filteredPhoneBook = phoneBook.filter((person) => {\r\n    return person.name.toLowerCase().includes(query.toLowerCase());\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      {filteredPhoneBook.map((person) => {\r\n        return (\r\n          <div key={person.id} id={person.id}>\r\n            {person.name} {person.number}\r\n            <button onClick={onDelete} value={person.name}>\r\n              delete\r\n            </button>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Persons;\r\n","import React from 'react';\r\n\r\nconst Notification = ({ message, status }) => {\r\n  const className = `notification ${status}`;\r\n  return <div className={className}>{message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import axios from 'axios';\r\nconst baseURL = '/api/persons';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseURL);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newPerson) => {\r\n  const request = axios.post(baseURL, newPerson);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newPerson) => {\r\n  const request = axios.put(`${baseURL}/${id}`, newPerson);\r\n  return request\r\n    .then((response) => response.data)\r\n    .catch((error) => console.log(error.message));\r\n};\r\n\r\nconst deletePerson = (id) => {\r\n  const request = axios.delete(`${baseURL}/${id}`);\r\n  return request;\r\n};\r\n\r\nexport { getAll, create, update, deletePerson };\r\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport Notification from './components/Notification';\nimport { getAll, create, deletePerson, update } from './services';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n\n  useEffect(() => {\n    getAll().then((data) => setPersons(data));\n  }, []);\n\n  const [filterQuery, setFilterQuery] = useState('');\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [message, setMessage] = useState([]);\n\n  const handleFilterChange = (e) => {\n    setFilterQuery(e.target.value);\n  };\n\n  const handleNameChange = (e) => {\n    setNewName(e.target.value);\n  };\n\n  const handleNumberChange = (e) => {\n    setNewNumber(e.target.value);\n  };\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n\n    const newPerson = {\n      name: newName,\n      number: newNumber,\n    };\n\n    const availability = persons.find(\n      (person) => person.name.toLowerCase() === newName.toLowerCase()\n    );\n\n    const changedPerson = { ...availability, number: newNumber };\n\n    availability === undefined\n      ? create(newPerson).then((data) => {\n          setPersons([...persons, data]);\n          setMessage([`Added ${newPerson.name}`, 'success']);\n        })\n      : window.confirm(\n          `${availability.name} is already added to your phonebook, replace with a new one ?`\n        )\n      ? update(availability.id, changedPerson)\n          .then((res) => res.data)\n          .then(() =>\n            setMessage([`Change ${newPerson.name} number`, 'success'])\n          )\n          .then(() => getAll().then((data) => setPersons(data)))\n          .catch((error) => console.log(error.message))\n      : '';\n  };\n\n  const handleDeletePerson = (e) => {\n    setMessage([\n      `Information of ${e.target.value} has already been removed from server`,\n      'warning',\n    ]);\n    window.confirm(`Delete ${e.target.value} ?`)\n      ? deletePerson(e.target.parentElement.id).then(() =>\n          getAll().then((data) => setPersons(data))\n        )\n      : setMessage([]);\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      {message.length !== 0 ? (\n        <Notification message={message[0]} status={message[1]} />\n      ) : (\n        ''\n      )}\n      <Filter\n        filterQuery={filterQuery}\n        handleFilterChange={handleFilterChange}\n      />\n      <h2>Add a new</h2>\n      <PersonForm\n        handleFormSubmit={handleFormSubmit}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n      <h3>Numbers</h3>\n      <Persons\n        person={persons}\n        query={filterQuery}\n        onDelete={handleDeletePerson}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\n\nimport App from './App';\nimport './index.css';\n\nconst rootElement = document.getElementById('root');\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}